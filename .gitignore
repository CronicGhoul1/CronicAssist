<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Responsive AI Chatbot with Voice</title>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f4f7fa;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }
        .chat-container {
            width: 100%;
            max-width: 400px;
            background: white;
            border-radius: 10px;
            box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
            overflow: hidden;
        }
        .chat-box {
            height: 300px;
            overflow-y: auto;
            padding: 15px;
            background: #fff;
            border-bottom: 1px solid #ddd;
        }
        .message {
            margin-bottom: 10px;
            display: flex;
            flex-direction: column;
        }
        .message .content {
            padding: 10px;
            border-radius: 10px;
            max-width: 80%;
            word-wrap: break-word;
        }
        .user .content {
            background: #dcf8c6;
            align-self: flex-end;
        }
        .ai .content {
            background: #e9eaed;
            align-self: flex-start;
        }
        .input-area {
            display: flex;
            padding: 10px;
            background: #fff;
            border-top: 1px solid #ddd;
        }
        .input-area input {
            flex-grow: 1;
            padding: 10px;
            border: 1px solid #ddd;
            border-radius: 5px;
        }
        .input-area button {
            padding: 10px;
            background: #4285f4;
            color: white;
            border: none;
            border-radius: 5px;
            cursor: pointer;
        }
        .input-area button:hover {
            background: #3367d6;
        }
        .voice-btn {
            background: #34b7f1;
            margin-left: 10px;
        }
        .voice-btn:hover {
            background: #007bff;
        }
        @media (max-width: 600px) {
            .chat-container {
                width: 100%;
                margin: 10px;
            }
        }
    </style>
</head>
<body>
    <div class="chat-container">
        <div class="chat-box" id="chatBox"></div>
        <div class="input-area">
            <input type="text" id="userInput" placeholder="Type a message..." onkeydown="if(event.key === 'Enter'){ sendMessage(); }">
            <button onclick="sendMessage()">Send</button>
            <button class="voice-btn" onclick="toggleVoice()">üéôÔ∏è</button>
        </div>
    </div>

    <script>
        const chatBox = document.getElementById('chatBox');
        const userInput = document.getElementById('userInput');
        const voiceBtn = document.querySelector('.voice-btn');
        let isListening = false;
        let recognition;

        // Initialize Speech Recognition
        if ('webkitSpeechRecognition' in window) {
            recognition = new webkitSpeechRecognition();
            recognition.lang = 'en-US';
            recognition.interimResults = true;
            recognition.onresult = (event) => {
                const transcript = event.results[0][0].transcript;
                userInput.value = transcript;
            };
            recognition.onend = () => {
                isListening = false;
                voiceBtn.textContent = 'üéôÔ∏è';
            };
        } else {
            voiceBtn.disabled = true;
        }

        // Toggle voice recognition
        function toggleVoice() {
            if (isListening) {
                recognition.stop();
            } else {
                recognition.start();
            }
            isListening = !isListening;
            voiceBtn.textContent = isListening ? 'üî¥' : 'üéôÔ∏è';
        }

        // Send message
        function sendMessage() {
            const message = userInput.value.trim();
            if (!message) return;

            appendMessage('user', message);
            userInput.value = '';
            getAIResponse(message);
        }

        // Append message to chat
        function appendMessage(sender, message) {
            const messageElement = document.createElement('div');
            messageElement.classList.add('message', sender);
            const content = document.createElement('div');
            content.classList.add('content');
            content.textContent = message;
            messageElement.appendChild(content);
            chatBox.appendChild(messageElement);
            chatBox.scrollTop = chatBox.scrollHeight;
        }

        // Get AI response (simulated)
        function getAIResponse(userMessage) {
            const aiMessage = `AI: You said "${userMessage}".`;
            appendMessage('ai', aiMessage);
            speak(aiMessage);
        }

        // Speak text
        function speak(text) {
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.lang = 'en-US';
            window.speechSynthesis.speak(utterance);
        }
    </script>
</body>
</html>
